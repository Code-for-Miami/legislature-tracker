/*! legislature-tracker - v0.0.1 - 2013-01-24
* https://github.com/MinnPost/legislature-tracker
* Copyright (c) 2013 ; Licensed MIT */
(function(e,t,n){_.mixin({trim:function(e){return String.prototype.trim?e=e.trim():e=e.replace(/^\s+|\s+$/g,""),e}}),_.isFunction(Backbone.$.jsonp)&&(Backbone.ajax=function(){return Backbone.$.jsonp.apply(Backbone.$,arguments)})})(jQuery,window);var LT,originalLT,exports=exports||undefined;_.isUndefined(exports)?(originalLT=window.LT,LT={},LT.noConflict=function(){return window.LT=originalLT,this},window.LT=LT):LT=exports,function(e,t,n){LT.cache={},LT.cache.models={},LT.utils={},LT.utils.getModel=function(e,t,n,r){var i=e+":"+t+":"+n[t];return _.isUndefined(LT.cache.models[i])&&(LT.cache.models[i]=new LT[e](n,r)),LT.cache.models[i]},LT.utils.fetchModel=function(e,t){e.get("fetched")!==!0?e.fetch(t):t.success.apply(e,[e,!1,!1])},LT.translations={},LT.translations.eBills={bill_id:"bill",ecategories:"categories",etitle:"title",edescription:"description"}}(jQuery,window),function(e,t,n){LT.OSModel=Backbone.Model.extend({urlBase:function(){return"http://openstates.org/api/v1/"},urlEnd:function(){return"/?apikey="+encodeURI(this.options.apiKey)+"&callback=?"},url:function(){return this.urlBase()+"/"+encodeURI(this.osType)+"/"+encodeURI(this.id)+this.urlEnd()},initialize:function(e,t){this.options=t,this.on("sync",function(e,t,n){e.set("fetched",!0)})}}),LT.OSStateModel=LT.OSModel.extend({url:function(){return this.urlBase()+"/metadata/"+encodeURI(this.options.state)+this.urlEnd()}}),LT.OSBillModel=LT.OSModel.extend({url:function(){return _.isUndefined(this.id)?this.urlBase()+"/bills/"+encodeURI(this.options.state)+"/"+encodeURI(this.options.session)+"/"+encodeURI(this.get("bill_id"))+this.urlEnd():this.urlBase()+"/bills/"+this.id+this.urlEnd()}}),LT.OSLegislatorModel=LT.OSModel.extend({osType:"legislators"}),LT.OSCommitteeModel=LT.OSModel.extend({osType:"committees"}),LT.CategoryModel=Backbone.Model.extend({initialize:function(e,t){this.options=t}})}(jQuery,window),function(e,t,n){LT.CategoriesCollection=Backbone.Collection.extend({model:LT.CategoryModel}),LT.BillsCollection=Backbone.Collection.extend({model:LT.OSBillModel})}(jQuery,window),function(e,t,n){LT.MainApplicationView=Backbone.View.extend({templates:{loading:e("#template-loading").html(),categories:e("#template-categories").html(),category:e("#template-category").html(),bill:e("#template-bill").html()},initialize:function(e){this.$el.addClass("ls")},loading:function(){this.$el.html(_.template(this.templates.loading,{}))},renderCategories:function(){this.$el.html(_.template(this.templates.categories,{categories:this.router.categories.toJSON(),bills:this.router.bills.toJSON()}))},renderCategory:function(e){_.isObject(e)||(e=this.router.categories.get(e)),this.$el.html(_.template(this.templates.category,e.toJSON()))},renderBill:function(e){_.isObject(e)||(e=this.router.bills.get(e)),this.$el.html(_.template(this.templates.bill,e.toJSON()))}})}(jQuery,window),LT.Application=Backbone.Router.extend({routes:{categories:"categories","category/:category":"category","bill/:bill":"bill","*defaultR":"defaultR"},initialize:function(e){this.options=e,_.bindAll(this),this.mainView=new LT.MainApplicationView(e),this.mainView.router=this,this.mainView.loading(),this.tabletop=Tabletop.init({key:this.options.billsSheet,simpleSheet:!0,postProcess:this.parseEBills,callback:this.loadEBills,callbackContext:this})},loadEBills:function(e,t){var n=this;this.categories=new LT.CategoriesCollection,this.bills=new LT.BillsCollection,_.each(e,function(e){_.each(e.ecategories,function(t){var r,i=LT.utils.getModel("CategoryModel","id",{id:t},n.options);i.set("name",t),r=i.get("bills"),_.isUndefined(r)?i.set("bills",[e.bill_id]):(r.push(e.bill_id),i.set("bills",r)),n.categories.push(i)})}),_.each(e,function(e){n.bills.push(LT.utils.getModel("OSBillModel","bill_id",e,n.options))}),this.start()},parseEBills:function(e){return _.each(LT.translations.eBills,function(t,n){e[n]=e[t]}),e.ecategories=e.ecategories.split(","),e.ecategories=_.map(e.ecategories,_.trim),e},start:function(){Backbone.history.start()},defaultR:function(){this.navigate("/categories",{trigger:!0,replace:!0}),this.mainView.render()},categories:function(){this.mainView.renderCategories()},category:function(e){e=decodeURI(e),this.mainView.renderCategory(e)},bill:function(e){var t=this;e=decodeURI(e);var n=LT.utils.getModel("OSBillModel","bill_id",{bill_id:e},this.options);LT.utils.fetchModel(n,{success:function(e,n,r){t.mainView.renderBill(e)},error:this.error})},error:function(e){}});