// import media queries
@import "layout/mediaqueries";
@import "layout/catalog-grid";

/* Mixins =================================================== */

@function strip-units($number) {
	@return $number / ($number * 0 + 1);
}

// @include rem(padding, 1.5rem 12 16 24)
// takes unitless px, px or rem  values
@mixin rem($property, $px: $base-font-size) {

  	$pxvalues: null;
  	$remvalues: null;

  	@each $pxvalue in $px {

  		@if $pxvalue == 0 or $pxvalue == auto {
			$pxvalues: append($pxvalues, $pxvalue);
			$remvalues: append($remvalues, $pxvalue); 
		} @else {
			$unit: unit($pxvalue);

			@if $unit == "" {
				$pxvalues: append($pxvalues, ($pxvalue+px));
				$remvalues: append($remvalues, ($pxvalue/$base-font-size)+rem);
			}
			@if $unit == "px" {
				$unitlesspx: strip-units($pxvalue);
				$pxvalues: append($pxvalues, ($pxvalue));
				$remvalues: append($remvalues, ($unitlesspx/$base-font-size)+rem);
			} 
			@if $unit == "rem" {
				$unitlessrem: strip-units($pxvalue);
				$pxvalues: append($pxvalues, round($unitlessrem * $base-font-size)+px);
				$remvalues: append($remvalues, ($pxvalue));	
			}
			@if $unit == "em" {
				$unitlessrem: strip-units($pxvalue);
				$pxvalues: append($pxvalues, ($pxvalue));
				$remvalues: append($remvalues, ($pxvalue));
			}

		}
	}

	@include old-ie { #{$property}: $pxvalues; }
	#{$property}: $remvalues;
}

// @include userselect(VALUE) (all, element, none, text)
@mixin user-select($select) {
	-webkit-user-select : $select;
	-moz-user-select : $select;
	-o-user-select : $select;
	user-select : $select; 
}

///////////////////////////////
// TYPOGRAPHY
///////////////////////////////

@mixin ellipsis {
	display: block;
	overflow: hidden;
	white-space: nowrap;
	-o-text-overflow: ellipsis;
	-ms-text-overflow: ellipsis;
	text-overflow: ellipsis;
}

///////////////////////////////
// LAYOUT
///////////////////////////////
  
@mixin clearfix {
	&:before, &:after {
		display: table;
		content : ""; 
	}
	&:after {
		clear : both; 
	} 
	@include old-ie {
		zoom : 1;
	}
}

// Hidden but available to speaking browsers
@mixin visuallyhidden() {
	overflow : hidden;
	position : absolute;
	clip : rect(0 0 0 0);
	height : 1px;
	width : 1px;
	margin : -1px;
	padding : 0;
	border : 0;

	// Make visuallyhidden focusable with a keyboard	
	&.focusable {
		&:active,
		&:focus {
			position : static;
			clip : auto;
			height : auto;
			width : auto;
			margin : 0;
			overflow: visible;
		} 
	}
}

// remove visuallyhidden styles
@mixin visible() {
	overflow : visible;
	position : static;
	clip : auto;
	height : auto;
	width : auto;
	margin : 0;
}

// @include resize(VALUE) (none, both, horizontal, vertical, inherit)
@mixin resize($direction: both) {
	resize : $direction;
	overflow : auto; 
}

// @include box-theme($navpillsbg, $navpillslinkpadding/*, $radius, $shadow*/);
@mixin box-theme(
	$bgcolor: false, 
	$padding: false, 
	$border-sides: false, $border: false, 
	$radius: false, 
	$shadow: false) {

	@if $padding != false {
		@include rem(padding, $padding);
	}

	@if $border-sides != false and first_value_of($border) != false and first_value_of($border) != 0 {
		@if $border-sides == all {
			border: $border;
		} @else {
			@each $side in $border-sides {
				border-#{$side}: $border;
			}
		}
	}

	@if $radius != false {
		@include border-radius($radius);
	}

	@if $shadow != false {
		@include box-shadow($shadow);
	}

	@if $bgcolor != false {
		background: $bgcolor;
	}

}